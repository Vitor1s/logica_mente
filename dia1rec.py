# Exerc√≠cios Pr√°ticos
# 1. Reflex√£o sobre L√≥gica:
# ‚óã Pense em uma tarefa cotidiana (como preparar um caf√©) e escreva os
# passos necess√°rios para realiz√°-la. Isso ajudar√° a praticar a cria√ß√£o de
# algoritmos simples.

# 2. Teste do Python:
# ‚óã Abra o Python no Prompt de Comando/Terminal e tente realizar c√°lculos
# simples, como 2 + 2 ou 10 * 5.
# ‚óã Experimente imprimir outras mensagens usando print("Sua mensagem
# aqui").

# 3. Personalize seu Primeiro Programa:
# ‚óã No VS Code, modifique o arquivo dia1.py para exibir uma mensagem de
# boas-vindas personalizada com seu nome.


#1 Refletidno sobre a logica 

# Se arrumando de manha para o trbalho 

acao1 = "Levantei"
print(f"{acao1} me alonguei, e troquei de roupa")

acao2 = "Fui ao banheiro"
print(f"{acao2} escovei os dentes joguei e joguei uma agua nos rosto")

acao3 = "Voltei para o quarto"
print(f"{acao3} Fui ate a cama dobrei as cobertas e removi os len√ßois dobrei e guardei tudo no guarda-roupa")

acao4 = "Arrumei a bolsa"
print(f"{acao4}e conferi se estava tudo certo, e se nao estava esquecendo de nada")

acao5 = "Saindo de casa"
print(f"{acao5} peguei a bolsa fui ate o portao destranquei o portao e sai de casa")

acao6 = "Pegando onibus"
print(f"{acao6}entrei no onibus e fui ate o trbalho")


#2 Testando python


print("Pqe acho a programa√ß√£o tao doida")
print("Quando acho que to entendendo, sinto a sindrome do impostor")
print("Mesmo trabalhando com isso, me sinto t√£o idiota")

soma = 500 * 1000 

print(soma)


# Exercicios extras

# Claro, Vitor! Abaixo v√£o **exerc√≠cios simples, diretos e progressivos** para voc√™ treinar os dois t√≥picos:

# 1. **Cria√ß√£o de algoritmos l√≥gicos do dia a dia**
# 2. **Testes com `print()` e c√°lculos simples no Python**

# ---

# ## ‚úÖ PARTE 1 ‚Äì Exerc√≠cios de l√≥gica cotidiana (algoritmos)

# üß† Tente escrever os passos como se estivesse ensinando algu√©m (ou um computador) a fazer isso:

# ### Exerc√≠cio 1:

# **Descreva em passos como escovar os dentes.**

# ### Exerc√≠cio 2:

# **Crie um algoritmo para preparar um miojo.**

# ### Exerc√≠cio 3:

# **Liste os passos para sair de casa em um dia de chuva.**

# ### Exerc√≠cio 4:

# **Escreva os passos para comprar algo online (sem c√≥digo ainda).**

# ---

# ## üß™ PARTE 2 ‚Äì Testes no Python (`print` e c√°lculos)

# üíª Execute os comandos no terminal Python e observe os resultados.

# ### Exerc√≠cio 5:

# Imprima tr√™s frases motivacionais usando `print()`.

# ```python
# # Exemplo:
# print("A pr√°tica leva √† perfei√ß√£o!")
# ```

# ---

# ### Exerc√≠cio 6:

# Fa√ßa as seguintes contas e use `print()` para mostrar o resultado:

# * 10 + 15
# * 7 \* 9
# * (50 + 20) / 2
# * 2 elevado a 5

# ---

# ### Exerc√≠cio 7:

# Crie vari√°veis com seu nome e idade, e use `print()` para montar uma frase:

# ```python
# # Exemplo:
# nome = "Vitor"
# idade = 29
# print(f"Meu nome √© {nome} e eu tenho {idade} anos.")
# ```

# ---

# ### Exerc√≠cio 8:

# Use vari√°veis para guardar o valor de um produto e o valor de desconto, depois mostre quanto vai pagar no final:

# ```python
# # Exemplo:
# produto = 120
# desconto = 20
# preco_final = produto - desconto
# print(f"Vou pagar R${preco_final} no produto.")
# ```

# ---

# Se quiser, posso montar isso como um **arquivo `.py` pronto pra rodar**, ou como um desafio com corre√ß√µes e dicas se voc√™ me mostrar seus resultados.

# Quer que eu te envie isso j√° formatado como um [roteiro de treino do dia](f)?
